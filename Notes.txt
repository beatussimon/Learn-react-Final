Lecture 65 and beyond

In case of useState() hook you have a state and a setState hook to change the value of the state
useReducer:

In case of reducer we have a state and a reducer function and an action which we dispatch 
syntax: const[state, dispatch] = useReducer(reducerFunc, initial_value)

function reducer(state, action){

}

Whenever you want yo make changes to the state, changes should be made inside the reducer function
In useReducer we dispatch an action object which includes the type of action as well as the payload

Then, we have a reducer function which actually modifies the value of the existing state that we have considering the action that we have

Using complex objects as state in reducer hook:

React apps are client side rendered, The server does not send the new page back

React router allows us to have multiple pages in a single page 
Create pages folder and inside the paages folder there is a place where all our react pages will reside

The pages you create are not going to be html files but react components


Nested routes=> Routes inside routes

We neew a way to render the nested routes if you just render them without giving them an outlet they wont be displayed do add outlet self closing tag to the parent router so that they are rendered inside the router

Programmatic navigation in react:
For example when an event happens you want to redirect the user to a different page
For instance you have a button and when it is clicked you want to direct the user to the new tab
Just like we have useState or useReducer we also have a use Navigate hook

A navigate function allows us to alseo pass in a state as well
For example when you click on a button it should transfer with it a state into to the newly navigatted page